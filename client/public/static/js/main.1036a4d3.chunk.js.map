{"version":3,"sources":["app/layout/nav/navBar/spedxchange-brand.svg","app/layout/nav/navBar/menus/GuestMenu.jsx","app/layout/nav/navBar/menus/AuthMenu.jsx","app/layout/modal/ModalActions.js","app/layout/modal/ModalConstants.js","app/api/apiConstants.js","app/common/util/setAuthToken.js","app/layout/auth/AuthActions.js","app/layout/auth/AuthContantants.js","app/layout/nav/navBar/NavBar.jsx","app/layout/nav/sideBar/SideBar.jsx","feature/question/questionList/QuestionListTag.jsx","feature/question/questionList/QuestionListItem.jsx","feature/question/questionList/QuestionList.jsx","app/api/questions.js","feature/question/questionActions.js","feature/question/questionConstants.js","app/layout/PageLoader.jsx","feature/question/questionActivity/QuestionActivity.jsx","feature/question/questionDashboard/QuestionDashboard.jsx","app/common/async/asyncActions.js","app/common/async/asyncConstants.js","feature/home/HomePage.jsx","feature/question/questionDetail/QuestionHeader.jsx","feature/question/questionDetail/QuestionDetailMap.jsx","feature/question/questionDetail/QuestionInfo.jsx","feature/question/questionDetail/QuestionChat.jsx","feature/question/questionDetail/QuestionSidebar.jsx","feature/question/questionDetail/QuestionDetail.jsx","feature/user/userDashboard/UserDashboard.jsx","feature/user/userDetail/UserDetail.jsx","feature/user/settings/SettingsNav.jsx","feature/user/settings/BasicPage.jsx","feature/user/settings/AboutPage.jsx","feature/user/settings/PhotosPage.jsx","app/common/form/TextInput.jsx","feature/user/settings/AccountPage.jsx","feature/user/settings/SettingsDashboard.jsx","app/common/form/TextArea.jsx","app/common/form/SelectInput.jsx","app/common/form/DateInput.jsx","app/common/form/PlaceInput.jsx","feature/question/questionForm/QuestionForm.jsx","feature/testarea/TestActions.js","feature/testarea/TestPlaceInput.jsx","feature/testarea/SimpleMap.jsx","feature/testarea/TestComponent.jsx","feature/testarea/TestConstants.js","app/layout/auth/login/LoginForm.jsx","app/layout/modal/LoginModal.jsx","app/layout/auth/register/RegisterForm.jsx","app/layout/modal/RegisterModal.jsx","app/layout/modal/ModalManager.jsx","app/layout/App.jsx","serviceWorker.js","app/common/util/ReducerUtil.js","feature/testarea/TestReducer.js","feature/question/questionReducer.js","app/layout/modal/ModalReducer.js","app/layout/auth/AuthReducer.js","app/common/async/asyncReducer.js","app/reducers/RootReducer.js","app/common/util/ScrollToTop.jsx","index.js","app/store/ConfigureStore.js"],"names":["module","exports","GuestMenu","signIn","register","Menu","Item","position","Button","basic","inverted","content","onClick","AuthMenu","signOut","profile","Image","avatar","spaced","src","photoURL","Dropdown","pointing","text","displayName","icon","as","Link","to","openModal","modalType","modalProps","type","payload","closeModal","HEADER_JSON","headers","setAuthToken","token","axios","defaults","common","loadUser","dispatch","getState","a","localStorage","get","res","data","actions","console","log","SubmissionError","_error","NavBar","handleSignIn","props","handleRegister","handleSignOut","auth","this","authenticated","currentUser","fixed","className","Container","NavLink","exact","header","logo","alt","Component","withRouter","connect","state","SideBar","activeItem","handleItemClick","e","name","setState","vertical","link","active","QuestionListTag","tag","Label","tagName","QuestionListItem","question","Segment","Statistic","size","Value","href","title","List","horizontal","tags","Object","values","map","idx","key","user","Content","verticalAlign","updated","moment","from","QuestionList","questions","deleteQuestion","_id","fetchQuestions","createQuestion","toastr","success","error","updateQuestion","PageLoader","Dimmer","Loader","QuestionActivity","Header","attached","questionId","loadQuestions","QuestionDashboard","handleDeleteQuestion","id","loading","Grid","Column","mobile","tablet","computer","async","HomePage","history","textAlign","push","Icon","questionImageStyle","filter","questionImageTextStyle","bottom","left","width","height","color","QuestionHeader","Group","style","padding","category","fluid","date","format","toDate","hostedBy","floated","Marker","QuestionDetailMap","lat","lng","bootstrapURLKeys","defaultCenter","defaultZoom","QuestionInfo","useState","isMapOpen","showMapToggle","description","venue","venueLatLng","QuestionChat","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","Form","reply","TextArea","labelPosition","primary","QuestionSidebar","attendees","secondary","length","relaxed","divided","attendee","ownProps","match","params","UserDashboard","UserDetail","SettingsNav","BasicPage","AboutPage","PhotosPage","TextInput","input","placeholder","meta","touched","Field","validate","combineValidators","newPassword1","isRequired","message","newPassword2","composeValidators","matchesField","reduxForm","form","invalid","submitting","handleSubmit","updatePassword","dividing","sub","onSubmit","inline","component","Divider","disabled","positive","creds","reset","path","render","rows","SelectInput","multiple","options","Select","value","onChange","DateInput","rest","placeholderText","selected","Date","onBlur","onChangeRaw","preventDefault","PlaceInput","onSelect","searchOptions","getInputProps","suggestions","getSuggestionItemProps","marginTop","zIndex","selection","suggestion","formattedSuggestion","mainText","Description","secondaryText","hasLengthGreaterThan","city","QuestionForm","cityLatLng","initialValues","newQuestion","cuid","hostPhotoURL","handleCitySelect","selectedCity","geocodeByAddress","then","results","getLatLng","latlng","change","handleVenueSelect","selectedVenue","pristine","autoComplete","types","location","google","maps","LatLng","radius","dateFormat","showTimeSelect","timeFormat","delay","ms","Promise","resolve","setTimeout","TestPlaceInput","handleChange","address","selectAddress","backgroundColor","cursor","React","AnyReactComponent","SimpleMap","zoom","defaultProps","incrementAsync","decrementAsync","TestComponent","handleSelect","latLng","catch","buttonName","target","negative","test","elementName","login","config","body","JSON","stringify","post","LoginModal","Modal","open","onClose","registeredUser","email","password","subbmitting","diabled","RegisterModal","modalLookup","currentModal","modals","renderedModal","ModalComponent","App","QuestionDetail","SettingsDashboard","Boolean","window","hostname","createReducer","initialState","fnMap","handler","rootReducer","combineReducers","FormReducer","testReducer","questionReducer","ModalReducer","AuthReducer","asyncReducer","TaostrReducer","ScrollToTop","prevProps","pathname","scrollTo","children","store","middlewares","thunk","composeEnhancer","composeWithDevTools","applyMiddleware","createStore","configureStore","rooEl","document","getElementById","ReactDOM","transitionIn","transitionOut","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1036a4d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spedxchange-brand.e4717b2e.svg\";","import React from 'react';\r\nimport { Menu, Button } from 'semantic-ui-react';\r\n\r\nconst GuestMenu = ({ signIn, register }) => {\r\n  return (\r\n    <Menu.Item position='right'>\r\n      <Button basic inverted content='Sign Up' onClick={register} />\r\n      <Button basic inverted content='Login' onClick={signIn} />\r\n    </Menu.Item>\r\n  );\r\n};\r\n\r\nexport default GuestMenu;\r\n","import React from 'react';\r\nimport { Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthMenu = ({ signOut, profile }) => {\r\n  return (\r\n    <Menu.Item position='right'>\r\n      <Image avatar spaced='right' src={profile.photoURL || '/assets/img/user.png'} />\r\n      <Dropdown pointing='top right' text={profile.displayName}>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item text='Create Question' icon='plus' />\r\n          <Dropdown.Item text='My Questions' icon='calendar' />\r\n          <Dropdown.Item text='My Network' icon='users' />\r\n          <Dropdown.Item text='My Profile' icon='user' />\r\n          <Dropdown.Item as={Link} to='/settings' text='Settings' icon='settings' />\r\n          <Dropdown.Item text='Sign Out' icon='power' onClick={signOut} />\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </Menu.Item>\r\n  );\r\n};\r\n\r\nexport default AuthMenu;\r\n","import { MODAL_OPEN, MODAL_CLOSE } from './ModalConstants';\r\n\r\nexport const openModal = (modalType, modalProps) => {\r\n  return {\r\n    type: MODAL_OPEN,\r\n    payload: {\r\n      modalType,\r\n      modalProps\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: MODAL_CLOSE\r\n  };\r\n};\r\n","export const MODAL_OPEN = 'MODAL_OPEN';\r\nexport const MODAL_CLOSE = 'MODAL_CLOSE';\r\n","export const API_ENDPOINT = '';\r\nexport const HEADER_JSON = {\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { SubmissionError, reset } from 'redux-form';\r\nimport { USER_LOADED, AUTH_ERROR, SIGNOUT_USER } from './AuthContantants';\r\nimport { API_ENDPOINT, HEADER_JSON } from '../../api/apiConstants';\r\nimport { closeModal } from '../modal/ModalActions';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport setAuthToken from '../../common/util/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => {\r\n  return async (dispatch, getState) => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const res = await axios.get(API_ENDPOINT + '/api/auth');\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = creds => {\r\n  return async (dispatch, getState) => {\r\n    const config = HEADER_JSON;\r\n    const body = JSON.stringify(creds);\r\n    try {\r\n      const res = await axios.post(API_ENDPOINT + '/api/auth', body, config);\r\n      await setAuthToken(res.data.token);\r\n      await dispatch(loadUser());\r\n      dispatch(closeModal());\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new SubmissionError({\r\n        _error: 'Login Failed'\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      await setAuthToken();\r\n      await dispatch(loadUser());\r\n      dispatch({\r\n        type: SIGNOUT_USER\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new SubmissionError({\r\n        _error: 'Sign Out Failed'\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const registeredUser = user => async (dispatch, getState) => {\r\n  const config = HEADER_JSON;\r\n  const body = JSON.stringify(user);\r\n  try {\r\n    const res = await axios.post(API_ENDPOINT + '/api/users', body, config);\r\n    await setAuthToken(res.data.token);\r\n    await dispatch(loadUser());\r\n    dispatch(closeModal());\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new SubmissionError({\r\n      _error: error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const updatePassword = creds => async (dispatch, getState) => {\r\n  try {\r\n    // add call here\r\n    await dispatch(reset('account'));\r\n    toastr.success('Success', 'Your password has been updated');\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new SubmissionError({\r\n      _error: error.message\r\n    });\r\n  }\r\n};\r\n","export const LOGIN_USER = 'LOGIN_USER';\r\nexport const SIGNOUT_USER = 'SIGNOUT_USER';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Menu, Container } from 'semantic-ui-react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport GuestMenu from './menus/GuestMenu';\r\nimport AuthMenu from './menus/AuthMenu';\r\nimport { openModal } from '../../modal/ModalActions';\r\nimport { signOut } from '../../auth/AuthActions';\r\n\r\nimport logo from './spedxchange-brand.svg';\r\n\r\nconst actions = {\r\n  openModal,\r\n  signOut\r\n};\r\n\r\nconst mapState = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nclass NavBar extends Component {\r\n  handleSignIn = () => {\r\n    this.props.openModal('LoginModal');\r\n  };\r\n\r\n  handleRegister = () => {\r\n    this.props.openModal('RegisterModal');\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.signOut();\r\n    // this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    const authenticated = auth.authenticated && auth.currentUser;\r\n    return (\r\n      <Menu inverted fixed='top' className='app-header'>\r\n        <Container>\r\n          <Menu.Item as={NavLink} className='brand' exact to='/' header>\r\n            <img src={logo} alt='SPEDxchange' className='ui' />\r\n          </Menu.Item>\r\n          {authenticated ? <AuthMenu profile={auth.currentUser} signOut={this.handleSignOut} /> : <GuestMenu signIn={this.handleSignIn} register={this.handleRegister} />}\r\n        </Container>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    actions\r\n  )(NavBar)\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nexport default class SideBar extends Component {\r\n  state = { activeItem: 'closTagsest' };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n\r\n    return (\r\n      <Menu text vertical className='app-sidebar'>\r\n        <Menu.Item link name='About Us' active={activeItem === 'About Us'} onClick={this.handleItemClick} />\r\n        <Menu.Item link name='Resources' active={activeItem === 'Resources'} onClick={this.handleItemClick} />\r\n        <Menu.Item link name='Scholarships' active={activeItem === 'Scholarships'} onClick={this.handleItemClick} />\r\n        <Menu.Item link name='Eye On SPED' active={activeItem === 'Eye On SPED'} onClick={this.handleItemClick} />\r\n        <Menu.Item link name='Contact Us' active={activeItem === 'Contact Us'} onClick={this.handleItemClick} />\r\n        <hr />\r\n        <Menu.Item link name='Questions' active={activeItem === 'Questions'} onClick={this.handleItemClick} />\r\n        <Menu.Item link name='Categories' active={activeItem === 'Categories'} onClick={this.handleItemClick} className='indent' />\r\n        <Menu.Item link name='Tags' active={activeItem === 'Tags'} onClick={this.handleItemClick} className='indent' />\r\n        <Menu.Item link name='People' active={activeItem === 'People'} onClick={this.handleItemClick} className='indent' />\r\n        <hr />\r\n        <Menu.Item link name='Jobs' active={activeItem === 'Jobs'} onClick={this.handleItemClick} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Label } from 'semantic-ui-react';\r\n\r\nclass QuestionListTag extends Component {\r\n  render() {\r\n    const { tag } = this.props;\r\n    return <Label as='a'>{tag.tagName}</Label>;\r\n  }\r\n}\r\n\r\nexport default QuestionListTag;\r\n","import React, { Component } from 'react';\r\nimport { Segment, Statistic, List, Image } from 'semantic-ui-react';\r\nimport QuestionListTag from './QuestionListTag';\r\nimport moment from 'moment/moment.js';\r\n\r\nclass QuestionListItem extends Component {\r\n  render() {\r\n    const { question } = this.props;\r\n    return (\r\n      <Segment vertical>\r\n        <div className='flex-wrap'>\r\n          <div className='votes'>\r\n            <div>\r\n              <Statistic size='mini'>\r\n                <Statistic.Value>100</Statistic.Value>\r\n                <Statistic.Label>votes</Statistic.Label>\r\n              </Statistic>\r\n            </div>\r\n            <div>\r\n              <Statistic size='mini'>\r\n                <Statistic.Value>100</Statistic.Value>\r\n                <Statistic.Label>answers</Statistic.Label>\r\n              </Statistic>\r\n            </div>\r\n          </div>\r\n          <div className='flex-item grow content'>\r\n            <h3>\r\n              <a href='/'>{question.title}</a>\r\n            </h3>\r\n            <p>{question.content}</p>\r\n            <div className='info'>\r\n              <div className='flex-wrap responsive'>\r\n                <div className='flex-item grow'>\r\n                  <List horizontal>{question.tags && Object.values(question.tags).map((tag, idx) => <QuestionListTag key={idx} tag={tag} />)}</List>\r\n                </div>\r\n                <div className='flex-item'>\r\n                  <div className='user'>\r\n                    <List horizontal>\r\n                      <List.Item>\r\n                        <Image avatar src={question.user.avatar} />\r\n                        <List.Content verticalAlign='middle'>{question.user.displayName}</List.Content>\r\n                      </List.Item>\r\n                    </List>\r\n                  </div>\r\n                  {question.updated && <div className='asked'>asked {moment(question.updated).from()}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionListItem;\r\n","import React, { Component, Fragment } from 'react';\r\nimport QuestionListItem from './QuestionListItem';\r\n\r\nclass QuestionList extends Component {\r\n  render() {\r\n    const { questions, deleteQuestion } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <h1>Questions</h1>\r\n        {questions && questions.map(question => <QuestionListItem key={question._id} question={question} deleteQuestion={deleteQuestion} />)}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionList;\r\n","import axios from 'axios';\r\nimport { API_ENDPOINT } from './apiConstants';\r\n\r\nexport const fetchQuestions = async () => {\r\n  try {\r\n    const res = await axios.get(API_ENDPOINT + '/api/questions');\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log('Error: ', error);\r\n  }\r\n};\r\n","import { CREATE_QUESTION, UPDATE_QUESTION, DELETE_QUESTION, FETCH_QUESTIONS } from './questionConstants';\r\nimport { fetchQuestions } from '../../app/api/questions';\r\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../../app/common/async/asyncActions';\r\nimport { toastr } from 'react-redux-toastr';\r\n\r\nexport const createQuestion = question => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_QUESTION,\r\n        payload: {\r\n          question\r\n        }\r\n      });\r\n      toastr.success('Success!', 'Question has been created');\r\n    } catch (error) {\r\n      toastr.error('Error!', 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateQuestion = question => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: UPDATE_QUESTION,\r\n        payload: {\r\n          question\r\n        }\r\n      });\r\n      toastr.success('Success!', 'Question has been updated');\r\n    } catch (error) {\r\n      toastr.error('Error!', 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteQuestion = questionId => {\r\n  return {\r\n    type: DELETE_QUESTION,\r\n    payload: {\r\n      questionId\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadQuestions = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(asyncActionStart());\r\n      const questions = await fetchQuestions();\r\n      dispatch({ type: FETCH_QUESTIONS, payload: { questions } });\r\n      dispatch(asyncActionFinish());\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(asyncActionError());\r\n    }\r\n  };\r\n};\r\n","export const CREATE_QUESTION = 'CREATE_QUESTION';\r\nexport const UPDATE_QUESTION = 'UPDATE_QUESTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\nexport const FETCH_QUESTIONS = 'FETCH_QUESTIONS';\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nconst PageLoader = ({ inverted = true }) => {\r\n  return (\r\n    <Dimmer inverted={inverted} active={true}>\r\n      <Loader content=\"Loading...\" />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React, { Fragment } from 'react';\r\nimport { Header, Segment } from 'semantic-ui-react';\r\n\r\nconst QuestionActivity = () => {\r\n  return (\r\n    <Fragment>\r\n      <Header attached=\"top\" content=\"Recent Activity\" />\r\n      <Segment attached>\r\n        <p>Recent activity</p>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionActivity;\r\n","import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport QuestionList from '../questionList/QuestionList';\r\nimport { connect } from 'react-redux';\r\nimport { createQuestion, updateQuestion, deleteQuestion, loadQuestions } from '../questionActions';\r\nimport PageLoader from '../../../app/layout/PageLoader';\r\nimport QuestionActivity from '../questionActivity/QuestionActivity';\r\n\r\nconst mapState = state => ({\r\n  questions: state.questions,\r\n  loading: state.async.loading\r\n});\r\n\r\nconst actions = {\r\n  createQuestion,\r\n  updateQuestion,\r\n  deleteQuestion,\r\n  loadQuestions\r\n};\r\n\r\nclass QuestionDashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.loadQuestions();\r\n  }\r\n\r\n  handleDeleteQuestion = id => {\r\n    this.props.deleteQuestion(id);\r\n  };\r\n\r\n  render() {\r\n    const { questions, loading } = this.props;\r\n    if (loading) return <PageLoader />;\r\n    return (\r\n      <Grid className='questions-dashboard'>\r\n        <Grid.Column mobile={16} tablet={10} computer={12}>\r\n          <QuestionList questions={questions} deleteQuestion={this.handleDeleteQuestion} />\r\n        </Grid.Column>\r\n        <Grid.Column mobile={16} tablet={6} computer={4}>\r\n          <QuestionActivity />\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapState,\r\n  actions\r\n)(QuestionDashboard);\r\n","import { ASYNC_ACTION_START, ASYNC_ACTION_FINISH, ASYNC_ACTION_ERROR } from \"./asyncConstants\";\r\n\r\nexport const asyncActionStart = () => {\r\n    return {\r\n        type: ASYNC_ACTION_START\r\n    }\r\n}\r\n\r\nexport const asyncActionFinish = () => {\r\n    return {\r\n        type: ASYNC_ACTION_FINISH\r\n    }\r\n}\r\n\r\nexport const asyncActionError = () => {\r\n    return {\r\n        type: ASYNC_ACTION_ERROR\r\n    }\r\n}","export const ASYNC_ACTION_START = 'ASYNC_ACTION_START';\r\nexport const ASYNC_ACTION_FINISH = 'ASYNC_ACTION_FINISH';\r\nexport const ASYNC_ACTION_ERROR = 'ASYNC_ACTION_ERROR';\r\n","import React from 'react';\r\nimport { Segment, Container, Header, Icon, Button } from 'semantic-ui-react';\r\n\r\nconst HomePage = ({ history }) => {\r\n  return (\r\n    <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          SPEDxchange\r\n        </Header>\r\n        <Button onClick={() => history.push('/questions')} size='huge' inverted>\r\n          Get started\r\n          <Icon name='right arrow' inverted />\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { Segment, Image, Item, Header, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nconst questionImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst questionImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\n\r\nconst QuestionHeader = ({ question }) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached='top' style={{ padding: '0' }}>\r\n        <Image src={`/assets/img/category/${question.category}.jpg`} fluid style={questionImageStyle} />\r\n\r\n        <Segment basic style={questionImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header size='huge' content={question.title} style={{ color: 'white' }} />\r\n                <p>\r\n                  {question.date && format(question.date.toDate(), 'EEEE do LLL')} at {question.date && format(question.date.toDate(), 'h:mm a')}\r\n                </p>\r\n                <p>\r\n                  Hosted by <strong>{question.hostedBy}</strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n\r\n      <Segment attached='bottom'>\r\n        <Button>Cancel My Place</Button>\r\n        <Button color='teal'>JOIN THIS QUESTION</Button>\r\n        <Button as={Link} to={`/manage/${question.id}`} color='orange' floated='right'>\r\n          Manage Question\r\n        </Button>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default QuestionHeader;\r\n","import React from 'react'\r\nimport { Segment } from 'semantic-ui-react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nconst Marker = () => <Icon name='marker' color='red' />;\r\n\r\nconst QuestionDetailMap = ({ lat, lng }) => {\r\n    const zoom = 14;\r\n    return (\r\n        <Segment attached='bottom' style={{padding: 0}}>\r\n            <div style={{ height: '300px', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyC4D1LiEjXq9Gw_Jx4m0fk1vfKwb6frWiI' }}\r\n                    defaultCenter={{lat, lng}}\r\n                    defaultZoom={zoom}\r\n                >\r\n                    <Marker\r\n                        lat={lat}\r\n                        lng={lng}\r\n                    />\r\n                </GoogleMapReact>\r\n            </div>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default QuestionDetailMap\r\n","import React, { useState } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { Segment, Icon, Button } from 'semantic-ui-react';\r\nimport { format } from 'date-fns';\r\nimport QuestionDetailMap from './QuestionDetailMap';\r\n\r\nconst QuestionInfo = ({ question }) => {\r\n  const [isMapOpen, showMapToggle] = useState(false);\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached='top'>\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size='large' color='teal' name='info' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{question.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='calendar' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>\r\n              {question.date && format(question.date.toDate(), 'EEEE do LLL')} at {question.date && format(question.date.toDate(), 'h:mm a')}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='marker' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>{question.venue}</span>\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <Button onClick={() => showMapToggle(!isMapOpen)} color='teal' size='tiny' content={isMapOpen ? 'Hide Map' : 'Show Map'} />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      {isMapOpen && <QuestionDetailMap lat={question.venueLatLng.lat} lng={question.venueLatLng.lng} />}\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default QuestionInfo;\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Comment, Form, Header, Button } from 'semantic-ui-react';\r\n\r\nconst QuestionChat = () => {\r\n  return (\r\n    <Fragment>\r\n      <Segment textAlign='center' attached='top' inverted color='teal' style={{ border: 'none' }}>\r\n        <Header>Chat about this question</Header>\r\n      </Segment>\r\n\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Matt</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>Today at 5:42PM</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>How artistic!</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Elliot Fu</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>Yesterday at 12:30AM</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>\r\n                <p>This has been very useful for my research. Thanks as well!</p>\r\n              </Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n            <Comment.Group>\r\n              <Comment>\r\n                <Comment.Avatar src='/assets/user.png' />\r\n                <Comment.Content>\r\n                  <Comment.Author as='a'>Jenny Hess</Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>Just now</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>Elliot you are always so right :)</Comment.Text>\r\n                  <Comment.Actions>\r\n                    <Comment.Action>Reply</Comment.Action>\r\n                  </Comment.Actions>\r\n                </Comment.Content>\r\n              </Comment>\r\n            </Comment.Group>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>5 days ago</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Form reply>\r\n            <Form.TextArea />\r\n            <Button content='Add Reply' labelPosition='left' icon='edit' primary />\r\n          </Form>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionChat;\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Label, List, Image } from 'semantic-ui-react';\r\n\r\nconst QuestionSidebar = ({ attendees }) => {\r\n  const isHost = false;\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: 'none' }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees && attendees.length}{' '}\r\n        {attendees && attendees.length === 1 ? 'Person' : 'People'} Going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided verticalAlign=\"middle\">\r\n          {attendees &&\r\n            attendees.map(attendee => (\r\n              <List.Item key={attendee.id} style={{ position: 'relative' }}>\r\n                {isHost && (\r\n                  <Label\r\n                    style={{ position: 'absolute' }}\r\n                    color=\"orange\"\r\n                    ribbon=\"right\"\r\n                  >\r\n                    Host\r\n                  </Label>\r\n                )}\r\n\r\n                <Image avatar src={attendee.photoURL} />\r\n                <List.Content verticalAlign=\"middle\">\r\n                  <List.Header as=\"h4\">{attendee.name}</List.Header>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuestionSidebar;\r\n","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport QuestionHeader from './QuestionHeader';\r\nimport QuestionInfo from './QuestionInfo';\r\nimport QuestionChat from './QuestionChat';\r\nimport QuestionSidebar from './QuestionSidebar';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const questionId = ownProps.match.params.id;\r\n\r\n  let question = {};\r\n\r\n  if (questionId && state.questions.length > 0) {\r\n    question = state.questions.filter(question => question.id === questionId)[0];\r\n  }\r\n\r\n  return {\r\n    question\r\n  };\r\n};\r\n\r\nconst QuestionDetail = ({ question }) => {\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <QuestionHeader question={question} />\r\n        <QuestionInfo question={question} />\r\n        <QuestionChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <QuestionSidebar attendees={question.attendees} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default connect(mapState)(QuestionDetail);\r\n","import React from 'react';\r\n\r\nconst UserDashboard = () => {\r\n  return <h1>User Dashboard</h1>;\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React from 'react';\r\n\r\nconst UserDetail = () => {\r\n  return <h1>User Detail</h1>;\r\n};\r\n\r\nexport default UserDetail;\r\n","import React, { Fragment } from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SettingsNav = () => {\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical>\r\n        <Header icon=\"user\" attached inverted color=\"grey\" content=\"Profile\" />\r\n        <Menu.Item as={NavLink} to=\"/settings/basic\">\r\n          Basics\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/settings/about\">\r\n          About Me\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/settings/photos\">\r\n          My Photos\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Menu vertical>\r\n        <Header\r\n          icon=\"settings\"\r\n          attached\r\n          inverted\r\n          color=\"grey\"\r\n          content=\"Account\"\r\n        />\r\n        <Menu.Item as={NavLink} to=\"/settings/account\">\r\n          My Account\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SettingsNav;\r\n","import React from 'react';\r\n\r\nconst BasicPage = () => {\r\n  return <h1>Basic Page</h1>;\r\n};\r\n\r\nexport default BasicPage;\r\n","import React from 'react';\r\n\r\nconst AboutPage = () => {\r\n  return <h1>About Page</h1>;\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from 'react'\r\n\r\nconst PhotosPage = () => {\r\n    return (\r\n        <h1>Photos Page</h1>\r\n    )\r\n}\r\n\r\nexport default PhotosPage\r\n","import React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\nconst TextInput = ({ input, type, placeholder, meta: { touched, error } }) => {\r\n  return (\r\n    <Form.Field error={touched && !!error}>\r\n      <input {...input} placeholder={placeholder} type={type} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Segment, Header, Form, Divider, Label, Button } from 'semantic-ui-react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { composeValidators, combineValidators, matchesField, isRequired } from 'revalidate';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\n\r\nconst validate = combineValidators({\r\n  newPassword1: isRequired({ message: 'Please enter a password' }),\r\n  newPassword2: composeValidators(isRequired({ message: 'Please confirm your password' }), matchesField('newPassword1')({ message: 'Passwords do not match' }))()\r\n});\r\n\r\nconst AccountPage = ({ error, invalid, submitting, handleSubmit, updatePassword }) => {\r\n  return (\r\n    <Segment>\r\n      <Header dividing size=\"large\" content=\"Account\" />\r\n      <div>\r\n        <Header color=\"teal\" sub content=\"Change password\" />\r\n        <p>Use this form to update your account settings</p>\r\n        <Form onSubmit={handleSubmit(updatePassword)}>\r\n          <Field width={8} name=\"newPassword1\" type=\"password\" pointing=\"left\" inline={true} component={TextInput} basic={true} placeholder=\"New Password\" />\r\n          <Field width={8} name=\"newPassword2\" type=\"password\" inline={true} basic={true} pointing=\"left\" component={TextInput} placeholder=\"Confirm Password\" />\r\n          {error && (\r\n            <Label basic color=\"red\">\r\n              {error}\r\n            </Label>\r\n          )}\r\n          <Divider />\r\n          <Button disabled={invalid || submitting} size=\"large\" positive content=\"Update Password\" />\r\n        </Form>\r\n      </div>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: 'account', validate })(AccountPage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { Route, Redirect, Switch } from 'react-router';\r\nimport SettingsNav from './SettingsNav';\r\nimport BasicPage from './BasicPage';\r\nimport AboutPage from './AboutPage';\r\nimport PhotosPage from './PhotosPage';\r\nimport AccountPage from './AccountPage';\r\nimport { updatePassword } from '../../../app/layout/auth/AuthActions';\r\n\r\nconst actions = {\r\n  updatePassword\r\n};\r\n\r\nconst SettingsDashboard = ({ updatePassword }) => {\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={12}>\r\n        <Switch>\r\n          <Redirect exact from='/settings' to='/settings/basic' />\r\n          <Route path='/settings/basic' component={BasicPage} />\r\n          <Route path='/settings/about' component={AboutPage} />\r\n          <Route path='/settings/photos' component={PhotosPage} />\r\n          <Route path='/settings/account' render={() => <AccountPage updatePassword={updatePassword} />} />\r\n        </Switch>\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <SettingsNav />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(SettingsDashboard);\r\n","import React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\nconst TextArea = ({\r\n  input,\r\n  rows,\r\n  type,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error}>\r\n      <textarea {...input} placeholder={placeholder} rows={rows} type={type} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\nconst SelectInput = ({\r\n  input,\r\n  placeholder,\r\n  multiple,\r\n  options,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error}>\r\n      <Select\r\n        value={input.value || null}\r\n        onChange={(e, data) => input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        multiple={multiple}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst DateInput = ({\r\n  input,\r\n  placeholder,\r\n  meta: { touched, error },\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error}>\r\n      <DatePicker\r\n        {...rest}\r\n        placeholderText={placeholder}\r\n        selected={input.value ? new Date(input.value) : null}\r\n        onChange={input.onChange}\r\n        onBlur={input.onBlur}\r\n        onChangeRaw={e => e.preventDefault()}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","import React from 'react';\r\nimport PlacesAutoComplete from 'react-places-autocomplete';\r\nimport { Form, Label, Segment, List } from 'semantic-ui-react';\r\n\r\nconst PlaceInput = ({\r\n  input: { value, onChange, onBlur },\r\n  width,\r\n  options,\r\n  placeholder,\r\n  onSelect,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <PlacesAutoComplete\r\n      value={value}\r\n      onChange={onChange}\r\n      searchOptions={options}\r\n      onSelect={onSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <Form.Field error={touched && !!error}>\r\n          <input\r\n            placeholder={placeholder}\r\n            {...getInputProps({ placeholder, onBlur })}\r\n          />\r\n          {touched && error && (\r\n            <Label basic color=\"red\">\r\n              {error}\r\n            </Label>\r\n          )}\r\n          {suggestions.length > 0 && (\r\n            <Segment\r\n              style={{\r\n                marginTop: 0,\r\n                position: 'absolute',\r\n                zIndex: 1000,\r\n                width: '100%'\r\n              }}\r\n            >\r\n              {loading && <div>Loading...</div>}\r\n              <List selection>\r\n                {suggestions.map(suggestion => (\r\n                  <List.Item {...getSuggestionItemProps(suggestion)}>\r\n                    <List.Header>\r\n                      {suggestion.formattedSuggestion.mainText}\r\n                    </List.Header>\r\n                    <List.Description>\r\n                      {suggestion.formattedSuggestion.secondaryText}\r\n                    </List.Description>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </Segment>\r\n          )}\r\n        </Form.Field>\r\n      )}\r\n    </PlacesAutoComplete>\r\n  );\r\n};\r\n\r\nexport default PlaceInput;\r\n","/*global google*/\r\nimport React, { Component } from 'react';\r\nimport { Segment, Form, Button, Grid, Header } from 'semantic-ui-react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { createQuestion, updateQuestion } from '../questionActions';\r\nimport cuid from 'cuid';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextArea from '../../../app/common/form/TextArea';\r\nimport SelectInput from '../../../app/common/form/SelectInput';\r\nimport DateInput from '../../../app/common/form/DateInput';\r\nimport { combineValidators, composeValidators, isRequired, hasLengthGreaterThan } from 'revalidate';\r\nimport PlaceInput from '../../../app/common/form/PlaceInput';\r\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const questionId = ownProps.match.params.id;\r\n\r\n  let question = {};\r\n\r\n  if (questionId && state.questions.length > 0) {\r\n    question = state.questions.filter(question => question.id === questionId)[0];\r\n  }\r\n\r\n  return {\r\n    initialValues: question\r\n  };\r\n};\r\n\r\nconst actions = {\r\n  createQuestion,\r\n  updateQuestion\r\n};\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: 'Title is required' }),\r\n  category: isRequired({ message: 'Category is required' }),\r\n  description: composeValidators(\r\n    isRequired({ message: 'Description is required' }),\r\n    hasLengthGreaterThan(6)({\r\n      message: 'Description needd to be at least 6 characters'\r\n    })\r\n  )(),\r\n  city: isRequired({\r\n    message: 'City is required'\r\n  }),\r\n  venue: isRequired({\r\n    message: 'Venue is required'\r\n  }),\r\n  date: isRequired({\r\n    message: 'Date is required'\r\n  })\r\n});\r\n\r\nconst category = [\r\n  { key: 'drinks', text: 'Drinks', value: 'drinks' },\r\n  { key: 'culture', text: 'Culture', value: 'culture' },\r\n  { key: 'film', text: 'Film', value: 'film' },\r\n  { key: 'food', text: 'Food', value: 'food' },\r\n  { key: 'music', text: 'Music', value: 'music' },\r\n  { key: 'travel', text: 'Travel', value: 'travel' }\r\n];\r\n\r\nclass QuestionForm extends Component {\r\n  state = {\r\n    cityLatLng: {},\r\n    venueLatLng: {}\r\n  };\r\n\r\n  onSubmit = values => {\r\n    values.venueLatLng = this.state.venueLatLng;\r\n    if (this.props.initialValues.id) {\r\n      this.props.updateQuestion(values);\r\n      this.props.history.push(`/questions/${this.props.initialValues.id}`);\r\n    } else {\r\n      const newQuestion = {\r\n        ...values,\r\n        id: cuid(),\r\n        hostPhotoURL: 'assets/img/user.png',\r\n        hostedBy: 'Bob'\r\n      };\r\n      this.props.createQuestion(newQuestion);\r\n      this.props.history.push(`/questions/${newQuestion.id}`);\r\n    }\r\n  };\r\n\r\n  handleCitySelect = selectedCity => {\r\n    geocodeByAddress(selectedCity)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latlng => {\r\n        this.setState({\r\n          cityLatLng: latlng\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.props.change('city', selectedCity);\r\n      });\r\n  };\r\n\r\n  handleVenueSelect = selectedVenue => {\r\n    geocodeByAddress(selectedVenue)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latlng => {\r\n        this.setState({\r\n          venueLatLng: latlng\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.props.change('venue', selectedVenue);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { history, initialValues, invalid, submitting, pristine } = this.props;\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <Segment>\r\n            <Header sub color='teal' content='Question Details' />\r\n            <Form onSubmit={this.props.handleSubmit(this.onSubmit)} autoComplete='off'>\r\n              <Field name='title' type='text' component={TextInput} placeholder='Question Name' />\r\n              <Field name='category' component={SelectInput} options={category} placeholder='Category' />\r\n              <Field type='text' name='description' component={TextArea} rows={5} placeholder='Description' />\r\n              <Header sub color='teal' content='Location Details' />\r\n              <Field type='text' name='city' component={PlaceInput} options={{ types: ['(cities)'] }} onSelect={this.handleCitySelect} placeholder='City' />\r\n              <Field\r\n                type='text'\r\n                name='venue'\r\n                component={PlaceInput}\r\n                options={{\r\n                  location: new google.maps.LatLng(this.state.cityLatLng),\r\n                  radius: 1000,\r\n                  types: ['establishment']\r\n                }}\r\n                onSelect={this.handleVenueSelect}\r\n                placeholder='Venue'\r\n              />\r\n              <Field type='text' name='date' component={DateInput} dateFormat='dd LLL yyyy h:mm a' showTimeSelect timeFormat='HH:mm' placeholder='Date' />\r\n              <Button type='submit' positive disabled={invalid || submitting || pristine}>\r\n                Submit\r\n              </Button>\r\n              <Button type='button' onClick={initialValues.id ? () => history.push(`/questions/${initialValues.id}`) : () => history.push('/questions')}>\r\n                Cancel\r\n              </Button>\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapState,\r\n  actions\r\n)(reduxForm({ form: 'questionForm', validate })(QuestionForm));\r\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from './TestConstants';\r\nimport { asyncActionFinish } from '../../app/common/async/asyncActions';\r\nimport { ASYNC_ACTION_START } from '../../app/common/async/asyncConstants';\r\nexport const incrementCounter = () => {\r\n  return {\r\n    type: INCREMENT_COUNTER\r\n  };\r\n};\r\n\r\nexport const decrementCounter = () => {\r\n  return {\r\n    type: DECREMENT_COUNTER\r\n  };\r\n};\r\n\r\nconst delay = ms => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n\r\nexport const incrementAsync = name => {\r\n  return async dispatch => {\r\n    dispatch({ type: ASYNC_ACTION_START, payload: name });\r\n    await delay(1000);\r\n    dispatch(incrementCounter());\r\n    dispatch(asyncActionFinish());\r\n  };\r\n};\r\n\r\nexport const decrementAsync = name => {\r\n  return async dispatch => {\r\n    dispatch({ type: ASYNC_ACTION_START, payload: name });\r\n    await delay(1000);\r\n    dispatch({ type: DECREMENT_COUNTER });\r\n    dispatch(asyncActionFinish());\r\n  };\r\n};\r\n","import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nclass TestPlaceInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: '' };\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  render() {\r\n    const { selectAddress } = this.props;\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address}\r\n        onChange={this.handleChange}\r\n        onSelect={selectAddress}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <input\r\n              {...getInputProps({\r\n                placeholder: 'Search Places ...',\r\n                className: 'location-search-input'\r\n              })}\r\n            />\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <div>Loading...</div>}\r\n              {suggestions.map(suggestion => {\r\n                const className = suggestion.active\r\n                  ? 'suggestion-item--active'\r\n                  : 'suggestion-item';\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                return (\r\n                  <div\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style\r\n                    })}\r\n                  >\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestPlaceInput;\r\n","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nconst AnyReactComponent = () => <Icon name=\"marker\" color=\"red\" />;\r\n\r\nclass SimpleMap extends Component {\r\n  static defaultProps = {\r\n    zoom: 11\r\n  };\r\n\r\n  render() {\r\n    const { latlng } = this.props;\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '300px', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyC4D1LiEjXq9Gw_Jx4m0fk1vfKwb6frWiI' }}\r\n          defaultCenter={latlng}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent lat={latlng.lat} lng={latlng.lng} />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { incrementAsync, decrementAsync } from './TestActions';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { openModal } from '../../app/layout/modal/ModalActions';\r\nimport TestPlaceInput from './TestPlaceInput';\r\nimport SimpleMap from './SimpleMap';\r\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\r\n\r\nconst mapState = state => ({\r\n  data: state.test.data,\r\n  loading: state.async.loading,\r\n  buttonName: state.async.elementName\r\n});\r\n\r\nconst actions = {\r\n  incrementAsync,\r\n  decrementAsync,\r\n  openModal\r\n};\r\n\r\nclass TestComponent extends Component {\r\n  state = {\r\n    latlng: {\r\n      lat: 59.95,\r\n      lng: 30.33\r\n    }\r\n  };\r\n\r\n  handleSelect = address => {\r\n    geocodeByAddress(address)\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => {\r\n        this.setState({\r\n          latlng: latLng\r\n        });\r\n      })\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n\r\n  render() {\r\n    const { data, incrementAsync, decrementAsync, openModal, loading, buttonName } = this.props;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <h3>answer {data}</h3>\r\n        <Button name='increment' loading={buttonName === 'increment' && loading} onClick={e => incrementAsync(e.target.name)} positive content='add' />\r\n        <Button name='decrement' loading={buttonName === 'decrement' && loading} onClick={e => decrementAsync(e.target.name)} negative content='sub' />\r\n        <Button onClick={() => openModal('TestModal', { data: 42 })} color='teal' content='Open Modal' />\r\n        <br />\r\n        <br />\r\n        <TestPlaceInput selectAddress={this.handleSelect} />\r\n        <SimpleMap key={this.state.latlng.lng} latlng={this.state.latlng} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapState,\r\n  actions\r\n)(TestComponent);\r\n","export const INCREMENT_COUNTER = 'INCREMENT_COUNTER;';\r\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER;';\r\n","import React from 'react';\r\nimport { Form, Segment, Button, Label } from 'semantic-ui-react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport TextInput from '../../../common/form/TextInput';\r\nimport { login } from '../AuthActions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst actions = {\r\n  login\r\n};\r\n\r\nconst LoginForm = ({ login, handleSubmit, error }) => {\r\n  return (\r\n    <Form size='large' onSubmit={handleSubmit(login)} autoComplete='off'>\r\n      <Segment>\r\n        <Field name='email' component={TextInput} type='text' placeholder='Email Address' />\r\n        <Field name='password' component={TextInput} type='password' placeholder='password' />\r\n        {error && (\r\n          <Label basic color='red'>\r\n            {error}\r\n          </Label>\r\n        )}\r\n        <Button fluid size='large' color='teal'>\r\n          Login\r\n        </Button>\r\n      </Segment>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(reduxForm({ form: 'loginForm' })(LoginForm));\r\n","import React, { Component } from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport LoginForm from '../auth/login/LoginForm';\r\nimport { closeModal } from './ModalActions';\r\n\r\nconst actions = { closeModal };\r\n\r\nclass LoginModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal size='mini' open={true} onClose={this.props.closeModal}>\r\n        <Modal.Header>Login to SPEDxchange</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <LoginForm />\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(LoginModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Segment, Button, Label } from 'semantic-ui-react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport TextInput from '../../../common/form/TextInput';\r\nimport { registeredUser } from '../AuthActions';\r\n\r\nconst actions = {\r\n  registeredUser\r\n};\r\n\r\nconst validate = combineValidators({\r\n  displayName: isRequired('displayName'),\r\n  email: isRequired('email'),\r\n  password: isRequired('password')\r\n});\r\n\r\nconst RegisterForm = ({ handleSubmit, registeredUser, error, invalid, subbmitting }) => {\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit(registeredUser)} size='large' autoComplete='off'>\r\n        <Segment>\r\n          <Field name='displayName' type='text' component={TextInput} placeholder='Name' />\r\n          <Field name='email' type='text' component={TextInput} placeholder='Email' />\r\n          <Field name='password' type='password' component={TextInput} placeholder='Password' />\r\n          {error && (\r\n            <Label basic color='red'>\r\n              {error}\r\n            </Label>\r\n          )}\r\n          <Button diabled={invalid || subbmitting} fluid size='large' color='teal'>\r\n            Register\r\n          </Button>\r\n        </Segment>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(reduxForm({ form: 'registerForm', validate })(RegisterForm));\r\n","import React, { Component } from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { closeModal } from './ModalActions';\r\nimport RegisterForm from '../auth/register/RegisterForm';\r\n\r\nconst actions = { closeModal };\r\n\r\nclass RegisterModal extends Component {\r\n  render() {\r\n    return (\r\n      <Modal size='mini' open={true} onClose={this.props.closeModal}>\r\n        <Modal.Header>Sign Up to SPEDxchange!</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <RegisterForm />\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  actions\r\n)(RegisterModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoginModal from './LoginModal';\r\nimport RegisterModal from './RegisterModal';\r\n\r\nconst modalLookup = {\r\n  LoginModal,\r\n  RegisterModal\r\n};\r\n\r\nconst mapState = state => ({\r\n  currentModal: state.modals\r\n});\r\n\r\nconst ModalManager = ({ currentModal }) => {\r\n  let renderedModal;\r\n\r\n  if (currentModal) {\r\n    const { modalType, modalProps } = currentModal;\r\n    const ModalComponent = modalLookup[modalType];\r\n\r\n    renderedModal = <ModalComponent {...modalProps} />;\r\n  }\r\n  return <span>{renderedModal}</span>;\r\n};\r\n\r\nexport default connect(mapState)(ModalManager);\r\n","import React, { Component, Fragment } from 'react';\r\nimport NavBar from '../layout/nav/navBar/NavBar';\r\nimport SideBar from '../layout/nav/sideBar/SideBar';\r\nimport { Container } from 'semantic-ui-react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport QuestionDashboard from '../../feature/question/questionDashboard/QuestionDashboard';\r\nimport HomePage from '../../feature/home/HomePage';\r\nimport QuestionDetail from '../../feature/question/questionDetail/QuestionDetail';\r\nimport UserDashboard from '../../feature/user/userDashboard/UserDashboard';\r\nimport UserDetail from '../../feature/user/userDetail/UserDetail';\r\nimport SettingsDashboard from '../../feature/user/settings/SettingsDashboard';\r\nimport QuestionForm from '../../feature/question/questionForm/QuestionForm';\r\nimport TestComponent from '../../feature/testarea/TestComponent';\r\nimport ModalManager from './modal/ModalManager';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ModalManager />\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route\r\n          path='/(.+)'\r\n          render={() => (\r\n            <Fragment>\r\n              <NavBar />\r\n              <SideBar />\r\n              <Container className='main'>\r\n                <Container className='content'>\r\n                  <Switch key={this.props.location.key}>\r\n                    <Route exact path='/questions' component={QuestionDashboard} />\r\n                    <Route path='/questions/:id' component={QuestionDetail} />\r\n                    <Route path='/people' component={UserDashboard} />\r\n                    <Route path='/profile/:id' component={UserDetail} />\r\n                    <Route path='/settings' component={SettingsDashboard} />\r\n                    <Route path={['/createQuestion', '/manage/:id']} component={QuestionForm} />\r\n                    <Route path='/test' component={TestComponent} />\r\n                  </Switch>\r\n                </Container>\r\n              </Container>\r\n            </Fragment>\r\n          )}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const createReducer = (initialState, fnMap) => {\r\n    return (state = initialState, { type, payload }) => {\r\n        const handler = fnMap[type];\r\n\r\n        return handler ? handler(state, payload) : state;\r\n    }\r\n}","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from './TestConstants';\r\nimport { createReducer } from '../../app/common/util/ReducerUtil';\r\n\r\nconst initialState = {\r\n  data: 42\r\n};\r\n\r\nconst incrementCounter = state => {\r\n  return { ...state, data: state.data + 1 };\r\n};\r\nconst decrementCounter = state => {\r\n  return { ...state, data: state.data - 1 };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [INCREMENT_COUNTER]: incrementCounter,\r\n  [DECREMENT_COUNTER]: decrementCounter\r\n});\r\n","import { createReducer } from '../../app/common/util/ReducerUtil';\r\nimport { CREATE_QUESTION, UPDATE_QUESTION, DELETE_QUESTION, FETCH_QUESTIONS } from './questionConstants';\r\n\r\nconst initialState = [];\r\n\r\nconst createQuestion = (state, payload) => {\r\n  return [...state, payload.question];\r\n};\r\n\r\nconst updateQuestion = (state, payload) => {\r\n  return [...state.filter(question => question.id !== payload.question.id), payload.question];\r\n};\r\n\r\nconst deleteQuestion = (state, payload) => {\r\n  return [...state.filter(question => question.id !== payload.questionId)];\r\n};\r\n\r\nconst fetchQuestions = (state, payload) => {\r\n  return payload.questions;\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [CREATE_QUESTION]: createQuestion,\r\n  [UPDATE_QUESTION]: updateQuestion,\r\n  [DELETE_QUESTION]: deleteQuestion,\r\n  [FETCH_QUESTIONS]: fetchQuestions\r\n});\r\n","import { createReducer } from '../../common/util/ReducerUtil';\r\nimport { MODAL_OPEN, MODAL_CLOSE } from './ModalConstants';\r\n\r\nconst initialState = null;\r\n\r\nconst openModal = (state, payload) => {\r\n  const { modalType, modalProps } = payload;\r\n  return { modalType, modalProps };\r\n};\r\n\r\nconst closeModal = state => {\r\n  return null;\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [MODAL_OPEN]: openModal,\r\n  [MODAL_CLOSE]: closeModal\r\n});\r\n","import { createReducer } from '../../common/util/ReducerUtil';\r\nimport { SIGNOUT_USER, USER_LOADED, AUTH_ERROR } from './AuthContantants';\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  currentUser: null\r\n};\r\n\r\nconst loadUser = (state, payload) => {\r\n  return {\r\n    authenticated: true,\r\n    currentUser: payload\r\n  };\r\n};\r\n\r\nconst authError = state => {\r\n  return {\r\n    authenticated: false,\r\n    currentUser: null\r\n  };\r\n};\r\n\r\nconst signoutUser = state => {\r\n  return {\r\n    authenticated: false,\r\n    currentUser: null\r\n  };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [SIGNOUT_USER]: signoutUser,\r\n  [USER_LOADED]: loadUser,\r\n  [AUTH_ERROR]: authError\r\n});\r\n","import { createReducer } from '../util/ReducerUtil';\r\nimport { ASYNC_ACTION_START, ASYNC_ACTION_FINISH, ASYNC_ACTION_ERROR } from './asyncConstants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  elementName: null\r\n};\r\n\r\nconst asyncActionStarted = (state, payload) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    elementName: payload\r\n  };\r\n};\r\n\r\nconst asyncActionFinished = state => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    elementName: null\r\n  };\r\n};\r\n\r\nconst asyncActionError = state => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    elementName: null\r\n  };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ASYNC_ACTION_START]: asyncActionStarted,\r\n  [ASYNC_ACTION_FINISH]: asyncActionFinished,\r\n  [ASYNC_ACTION_ERROR]: asyncActionError\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as FormReducer } from 'redux-form';\r\nimport { reducer as TaostrReducer } from 'react-redux-toastr';\r\nimport testReducer from '../../feature/testarea/TestReducer';\r\nimport questionReducer from '../../feature/question/questionReducer';\r\nimport ModalReducer from '../layout/modal/ModalReducer';\r\nimport AuthReducer from '../layout/auth/AuthReducer';\r\nimport asyncReducer from '../common/async/asyncReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  form: FormReducer,\r\n  test: testReducer,\r\n  questions: questionReducer,\r\n  modals: ModalReducer,\r\n  auth: AuthReducer,\r\n  async: asyncReducer,\r\n  toastr: TaostrReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\r\nimport './index.scss';\r\nimport App from './app/layout/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './app/store/ConfigureStore';\r\nimport ScrollToTop from './app/common/util/ScrollToTop';\r\nimport ReduxToastr from 'react-redux-toastr';\r\n\r\nconst store = configureStore();\r\n\r\nconst rooEl = document.getElementById('root');\r\n\r\nlet render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <ScrollToTop>\r\n          <ReduxToastr position='bottom-right' transitionIn='fadeIn' transitionOut='fadeOut' />\r\n          <App />\r\n        </ScrollToTop>\r\n      </BrowserRouter>\r\n    </Provider>,\r\n    rooEl\r\n  );\r\n};\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./app/layout/App', () => {\r\n    setTimeout(render);\r\n  });\r\n}\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from '../reducers/RootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const configureStore = () => {\r\n  const middlewares = [thunk];\r\n  const composeEnhancer = composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(rootReducer, composeEnhancer);\r\n  return store;\r\n};\r\n"],"sourceRoot":""}